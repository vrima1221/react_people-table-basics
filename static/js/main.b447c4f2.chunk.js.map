{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","React","memo","to","linkTitle","className","isActive","classNames","NavBar","role","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","isPeopleLoaded","setIsPeopleLoaded","loadPeople","peopleFromServer","useEffect","preparedPeople","find","woman","man","isNoPeopleError","length","isLoadedDataExist","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.b447c4f2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  linkTitle: string;\n};\n\nexport const PageNavLink: React.FC<Props> = React.memo(({\n  to, linkTitle,\n}) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {linkTitle}\n    </NavLink>\n  );\n});\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const NavBar: React.FC = React.memo(() => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" linkTitle=\"Home\" />\n          <PageNavLink to=\"/people\" linkTitle=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n});\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App: React.FC = React.memo(() => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={classNames(\n              { 'has-background-warning': person.slug === slug },\n            )}\n            key={person.slug}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = React.memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isPeopleLoaded, setIsPeopleLoaded] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setIsPeopleLoaded(true);\n    } catch (error) {\n      setErrorMessage('Unable to load people');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const preparedPeople = people.map(person => {\n    const mother = people.find(woman => woman.name === person.motherName);\n    const father = people.find(man => man.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  const isNoPeopleError = !preparedPeople.length && isPeopleLoaded;\n  const isLoadedDataExist = preparedPeople && isPeopleLoaded;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {isNoPeopleError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoadedDataExist && (\n            <PeopleTable people={preparedPeople} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n});\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n});\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}